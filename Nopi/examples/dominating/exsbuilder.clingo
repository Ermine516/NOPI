

graph(a).
graph(b).
graph(c).
graph(d).
dom(a,da).
dom(b,db).
dom(c,dc).
dom(d,dd).

node(G,1..n):- graph(G).
{edge(G,X,Y)}:-graph(G),node(G,X),node(G,Y), X!=Y.
{member(GD,X)}:- dom(G,GD), node(G,X).

:-graph(G), n>#count{X,Y: edge(G,X,Y)}.

dominating(GD):- dom(G,GD), #count{Y: not member(GD,Y),node(G,Y),member(GD,X), edge(G,X,Y)}=C1,
                 #count{X:  member(GD,X)}=C2, C1+C2=W, W=n.

:- dom(G,GD),edge(G,X,Y), edge(G,Z,Y), X!= Z, member(GD,X), member(GD,Z). 
:- edge(G,X,Y), not edge(G,Y,X).
:- dom(G,GD), member(GD,X),  #count{Y: node(G,Y),not member(GD,Y), edge(G,X,Y)} = 0.
:-     not dominating(da) ,dom(a,da).
:-     not dominating(db) ,dom(b,db).
:-     dominating(dc) ,dom(c,dc).
:-     dominating(dd) ,dom(d,dd).


:-    #count{X:  member(da,X)} !=3.
:-    #count{X:  member(db,X)} != 4.
:-    #count{X:  member(dc,X)} !=3.
:-    #count{X:  member(dd,X)} != 4.
#show node/2.
#show edge/3.
#show member/2.
